/* Reset rules to reduce browser inconsistencies regarding certain default values */
*, *:before, *:after {
  margin: 0;
  padding: 0;
  border: none;
  background: none;
  box-sizing: border-box;
  -webkit-font-smoothing: subpixel-antialiased !important;
}
/* JSON Drawer Styles */
body.json-drawer-open {
  overflow: hidden;
}

.json-drawer-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.4);
  opacity: 0;
  transition: opacity 200ms ease;
  z-index: 10000; /* below drawer, above app content */
}
.json-drawer-overlay.open {
  opacity: 1;
}

.json-drawer {
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  width: min(560px, 92vw);
  background: #0b1220; /* dark panel for code */
  color: #e5e7eb;
  box-shadow: 0 10px 25px rgba(0,0,0,0.4);
  transform: translateX(100%);
  transition: transform 240ms ease;
  display: flex;
  flex-direction: column;
  z-index: 10001; /* above overlay */
  border-left: 1px solid rgba(255,255,255,0.08);
}
.json-drawer.open {
  transform: translateX(0);
}

.json-drawer__header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 16px;
  border-bottom: 1px solid rgba(255,255,255,0.08);
  background: rgba(255,255,255,0.02);
}
.json-drawer__title {
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  font-size: 14px;
  font-weight: 600;
  letter-spacing: 0.2px;
}
.json-drawer__actions { display: flex; gap: 8px; }
.json-drawer__btn {
  font: inherit;
  font-size: 12px;
  padding: 6px 10px;
  border-radius: 6px;
  border: 1px solid rgba(255,255,255,0.16);
  background: rgba(255,255,255,0.06);
  color: #e5e7eb;
  cursor: pointer;
}
.json-drawer__btn:hover { background: rgba(255,255,255,0.1); }
.json-drawer__btn--primary { background: #2563eb; border-color: #2563eb; }
.json-drawer__btn--primary:hover { background: #1d4ed8; }

.json-drawer__body {
  padding: 0;
  overflow: auto;
  height: 100%;
}

.json-pre {
  margin: 0;
  padding: 16px;
  white-space: pre;
  overflow: auto;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 12px;
  line-height: 1.5;
  color: #d1d5db;
}

/* Optional lightweight JSON token coloring (basic heuristics) */
.json-pre .key { color: #93c5fd; }
.json-pre .string { color: #86efac; }
.json-pre .number { color: #fca5a5; }
.json-pre .boolean { color: #fcd34d; }
.json-pre .null { color: #e5e7eb; opacity: 0.85; }

/* Hover inspector highlight */
.figma-inspect-highlight {
  position: fixed;
  pointer-events: none;
  border: 2px solid #22d3ee; /* cyan */
  outline: 2px solid rgba(34, 211, 238, 0.25);
  outline-offset: 2px;
  border-radius: 4px;
  z-index: 9998; /* below page FAB */
}

/* Contextual inspector FAB near element */
.figma-inspect-fab {
  pointer-events: all;
  position: absolute;
  top: -10px;
  right: -10px;
  padding-top: 2px;
  padding-left: 2px;
  border-radius: 9999px;
  background: #111827;
  color: #e5e7eb;
  border: 1px solid rgba(255,255,255,0.16);
  box-shadow: 0 8px 20px rgba(0,0,0,0.25);
  cursor: pointer;
  z-index: 9999; /* above highlight */

  &:hover {
    background: #1f2937;
  }
}
<%
  const flatDomxNodes = document.nodes;

  function renderCssRules(domxNode) {
    const properties = Object.keys(domxNode.style || {})
      .map((property) => {
        let value = domxNode.style[property];

        if (typeof value === 'string' && value.match(/%.*%/)) {
          value = render(value, flatDomxNodes);
        }

        return ((value ?? '') !== '') ? `${kebabCase(property)}: ${value};` : undefined;
      })
      .filter((value) => value !== undefined);

    if (properties.length === 0) {
      return '';
    }

    return properties.join('\n');
  }

  function kebabCase(value) {
    return value
      .replace(/([a-z])([A-Z])/g, '$1-$2')
      .replace(/[\s_]+/g, '-')
      .toLowerCase();
  }

  Object.values(flatDomxNodes).forEach((domxNode) => {
    const cssRules = renderCssRules(domxNode) || '';
    const id = domxNode.attributes.id || '';

    if (cssRules !== '' && id !== '') {
-%>
<%- beautifyCss(`#${id} {\n${cssRules}\n}`, { indent_size: 2 }) %>
<% } -%>
<% }); -%>
