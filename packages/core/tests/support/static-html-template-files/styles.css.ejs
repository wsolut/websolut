*, *:before, *:after {
  margin: 0;
  padding: 0;
  border: none;
  background: none;
  box-sizing: border-box;
  -webkit-font-smoothing: subpixel-antialiased !important;
}
<%
  const flatDomxNodes = document.nodes;

  function renderCssRules(properties) {
    const rules = Object.keys(properties || {})
      .map((property) => {
        let rule = properties[property];

        if (typeof rule === 'object') {
          rule = renderCssRules(rule);

          return ((rule ?? '') !== '') ? beautifyCss(`&${property} {\n${rule}\n}`, { indent_size: 2 }) : undefined;
        }

        if (typeof rule === 'string' && rule.match(/%.*%/)) {
          rule = render(rule, flatDomxNodes);
        }

        return ((rule ?? '') !== '') ? `${property}: ${rule};` : undefined;
      })
      .filter((rule) => rule !== undefined);

    if (rules.length === 0) {
      return '';
    }

    return rules.join('\n');
  }

  Object.values(flatDomxNodes).forEach((domxNode) => {
    const cssRules = renderCssRules(domxNode.style || {}) || '';
    const id = domxNode.attributes.id || '';

    if (cssRules !== '' && id !== '') {
-%>
<%- beautifyCss(`#${id} {\n${cssRules}\n}`, { indent_size: 2 }) %>
<% } -%>
<% }); -%>
